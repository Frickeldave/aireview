{
    "model": "gpt-oss-120b-sovereign",
    "messages": [
        {
            "role": "system",
            "content": "Du bist ein erfahrener Senior Software-Entwickler und Code-Reviewer. Analysiere Code-Änderungen professionell und konstruktiv."
        },
        {
            "role": "user", 
            "content": "Führe eine umfassende Code-Review der folgenden Änderungen durch:\\n\\nBRANCH: feat/STACKITKBA-475-faq-astro-components\\nAUTOR: Oliver Müller\\nCOMMIT: refactor\\n\\nDIFF:\\ndiff --git a/apps/docs/src/components/faq/faq-item.astro b/apps/docs/src/components/faq/faq-item.astro\nnew file mode 100644\nindex 0000000000..14547e5d31\n--- /dev/null\n+++ b/apps/docs/src/components/faq/faq-item.astro\n@@ -0,0 +1,126 @@\n+---\n+import { iconPlus, iconMinus } from '@schwarz-ux/icons';\n+import { AstroCircleButton } from '@stackit/astro';\n+import { nanoid } from 'nanoid';\n+import { render } from 'astro:content';\n+import type { Faq } from './faq-service';\n+\n+interface Props {\n+\titem: Faq;\n+\topen?: boolean;\n+}\n+\n+const { item, open = false } = Astro.props;\n+\n+const { Content } = await render(Astro.props.item);\n+\n+const iconPlusSvg = iconPlus.data;\n+const iconMinusSvg = iconMinus.data;\n+const itemId = nanoid(10);\n+---\n+\n+<details class=\"faq-details\" open={open ?? undefined} id={itemId}>\n+\t<summary class=\"faq-summary not-content\">\n+\t\t<h3 class=\"faq-question\">{item.data.question}</h3>\n+\t\t<!-- Ignoring the button for screenreaders/ keyboard users since those users interact with the details element  -->\n+\t\t<AstroCircleButton\n+\t\t\ttabindex={-1}\n+\t\t\ticon={iconPlus}\n+\t\t\tsmallIcon={true}\n+\t\t\taria-label={Astro.locals.t('faqItem.toggleButton.label')}\n+\t\t\tcircleType=\"btn-circle\"\n+\t\t/>\n+\t</summary>\n+\t<div class=\"faq-content\">\n+\t\t<Content />\n+\t</div>\n+</details>\n+\n+<script define:vars={{ iconPlusSvg, iconMinusSvg, itemId }}>\n+\tconst detailsElement = document.getElementById(itemId);\n+\tconst toggleButton = detailsElement?.querySelector('.faq-summary button');\n+\n+\ttoggleButton.addEventListener('click', (e) => {\n+\t\te.stopPropagation();\n+\t\tdetailsElement.open = !detailsElement.open;\n+\t});\n+\n+\tif (detailsElement && toggleButton) {\n+\t\tconst buttonSvgContainer = toggleButton.querySelector('svg').parentElement;\n+\n+\t\tif (buttonSvgContainer) {\n+\t\t\tconst updateIcon = () => {\n+\t\t\t\tif (detailsElement.open) {\n+\t\t\t\t\tbuttonSvgContainer.innerHTML = iconMinusSvg;\n+\t\t\t\t} else {\n+\t\t\t\t\tbuttonSvgContainer.innerHTML = iconPlusSvg;\n+\t\t\t\t}\n+\t\t\t};\n+\n+\t\t\tupdateIcon();\n+\t\t\tdetailsElement.addEventListener('toggle', updateIcon);\n+\t\t}\n+\t}\n+</script>\n+\n+<style>\n+\tdetails {\n+\t\t/* required for height animation */\n+\t\tinterpolate-size: allow-keywords;\n+\t\tpadding: 0;\n+\t\tmargin: 0;\n+\t\tmargin-top: 0 !important;\n+\t\toverflow: hidden;\n+\t\tborder-radius: var(--border-radius-none, 0);\n+\t\tborder-bottom: 1px solid var(--color-border-neutral-subtle, #2c3d4a);\n+\t\tbackground: var(--color-background-surface, #091a26);\n+\t}\n+\tdetails > summary {\n+\t\tposition: relative;\n+\t\tlist-style: none;\n+\t\tmargin: 0;\n+\t}\n+\tdetails > summary::marker,\n+\tdetails > summary::-webkit-details-marker /* Safari */ {\n+\t\tdisplay: none;\n+\t}\n+\n+\tdetails::details-content {\n+\t\tblock-size: 0;\n+\t\topacity: 0;\n+\t\ttransition:\n+\t\t\tblock-size var(--animation-duration-moderate) var(--animation-timing-function-default)\n+\t\t\t\tallow-discrete,\n+\t\t\tcontent-visibility var(--animation-duration-moderate)\n+\t\t\t\tvar(--animation-timing-function-default) allow-discrete,\n+\t\t\topacity var(--animation-duration-moderate) var(--animation-timing-function-default);\n+\t}\n+\tdetails[open]::details-content {\n+\t\tblock-size: auto;\n+\t\topacity: 1;\n+\t}\n+\t.faq-summary {\n+\t\tdisplay: flex;\n+\t\talign-items: center;\n+\t}\n+\t.faq-content {\n+\t\tmargin-top: 0 !important;\n+\t\tpadding: var(--spacing-component-static-none, 0) var(--spacing-space-600, 48px)\n+\t\t\tvar(--spacing-component-static-3xl, 24px) 0;\n+\t}\n+\t.faq-question {\n+\t\tflex: 1 1 0;\n+\t\tmin-width: none;\n+\t\toverflow: hidden;\n+\t\twhite-space: nowrap;\n+\t\ttext-overflow: ellipsis;\n+\t\tcolor: var(--color-text-neutral-default, #e7eaed);\n+\t\tfont-size: var(--typography-font-size-heading-5, 14px);\n+\t\tfont-weight: 700;\n+\t\tline-height: var(--typography-line-height-heading-5, 22px);\n+\t\tpadding: var(--spacing-component-static-xl, 12px) 0;\n+\t}\n+\t.btn-circle {\n+\t\tmargin-top: 0 !important;\n+\t}\n+</style>\ndiff --git a/apps/docs/src/components/faq/faq-service.mock.ts b/apps/docs/src/components/faq/faq-service.mock.ts\nnew file mode 100644\nindex 0000000000..37ec40fa13\n--- /dev/null\n+++ b/apps/docs/src/components/faq/faq-service.mock.ts\n@@ -0,0 +1,146 @@\n+import type { RenderedContent } from 'astro:content';\n+\n+import type { Faq, FaqCategory, FaqItemGroup } from './faq-service';\n+\n+export const createRenderedContent = (): RenderedContent => ({\n+\thtml: `<div><strong>Et pariatur officia occaecat excepteur mollit.</strong></div>`,\n+});\n+\n+/**\n+ * Creates a mock Faq item.\n+ * @param index - An optional index to make the mock data unique.\n+ * @returns A mock Faq object.\n+ */\n+export const createMockFaq = (index: number = 0): Faq => ({\n+\tid: `mock/faq/category-${index}/faq-${index}`,\n+\tbody: `Mock FAQ body ${index}`,\n+\tcollection: 'faq',\n+\tdata: {\n+\t\tquestion: `Mock Question ${index}`,\n+\t\torder: index,\n+\t\tlastUpdated: new Date(`2023-01-${index + 1}`),\n+\t\tdraft: false,\n+\t},\n+\trendered: createRenderedContent(),\n+});\n+\n+/**\n+ * Creates a mock FaqItemGroup.\n+ * @param index - An optional index to make the mock data unique.\n+ * @param faqCount - The number of mock Faq items to include in the group. If not provided, a random number between 1 and 5 will be used.\n+ * @returns A mock FaqItemGroup object.\n+ */\n+export const createMockFaqItemGroup = (index: number = 0, faqCount?: number): FaqItemGroup => {\n+\tconst actualFaqCount = faqCount ?? Math.floor(Math.random() * 5) + 1; // Random count between 1 and 5\n+\treturn {\n+\t\tid: `category-${index}`,\n+\t\tcategory: `Mock Category ${index}`,\n+\t\torder: index,\n+\t\tfaqItems: Array.from({ length: actualFaqCount }, (_, i) => createMockFaq(index * 10 + i)),\n+\t};\n+};\n+\n+/**\n+ * Creates an array of mock FaqItemGroup objects.\n+ * @param count - The number of FaqItemGroup objects to create. Defaults to 10.\n+ * @returns An array of mock FaqItemGroup objects.\n+ */\n+export const createMockFaqItemGroups = (count: number = 5): FaqItemGroup[] =>\n+\tArray.from({ length: count }, (_, i) => createMockFaqItemGroup(i + 1));\n+\n+export const mockFaqs: Faq[] = [\n+\t{\n+\t\tid: 'platform/faq/general/faq-1',\n+\t\tbody: 'body 1',\n+\t\tcollection: 'faq',\n+\t\tdata: {\n+\t\t\tquestion: 'FAQ 1',\n+\t\t\torder: 2,\n+\t\t\tlastUpdated: new Date('2022-01-01'),\n+\t\t\tdraft: false,\n+\t\t},\n+\t},\n+\t{\n+\t\tid: 'platform/faq/general/faq-2',\n+\t\tbody: 'body 2',\n+\t\tcollection: 'faq',\n+\t\tdata: {\n+\t\t\tquestion: 'FAQ 2',\n+\t\t\torder: 1,\n+\t\t\tlastUpdated: new Date('2022-01-01'),\n+\t\t\tdraft: false,\n+\t\t},\n+\t},\n+\t{\n+\t\tid: 'products/faq/databases/faq-3',\n+\t\tbody: 'body 3',\n+\t\tcollection: 'faq',\n+\t\tdata: {\n+\t\t\tquestion: 'FAQ 3',\n+\t\t\torder: 1,\n+\t\t\tlastUpdated: new Date('2022-01-01'),\n+\t\t\tdraft: false,\n+\t\t},\n+\t},\n+\t{\n+\t\tid: 'products/faq/databases/faq-4',\n+\t\tbody: 'body 4',\n+\t\tcollection: 'faq',\n+\t\tdata: {\n+\t\t\tquestion: 'FAQ 4',\n+\t\t\torder: 2,\n+\t\t\tlastUpdated: new Date('2022-01-01'),\n+\t\t\tdraft: false,\n+\t\t},\n+\t},\n+\t{\n+\t\tid: 'platform/faq/security/faq-5',\n+\t\tbody: 'body 5',\n+\t\tcollection: 'faq',\n+\t\tdata: {\n+\t\t\tquestion: 'FAQ 5',\n+\t\t\torder: 1,\n+\t\t\tlastUpdated: new Date('2022-01-01'),\n+\t\t\tdraft: false,\n+\t\t},\n+\t},\n+];\n+\n+export const mockFaqCategories: FaqCategory[] = [\n+\t{\n+\t\tid: 'platform/faq/general/category',\n+\t\tbody: '',\n+\t\tcollection: 'faqCategory',\n+\t\tdata: {\n+\t\t\ttitle: 'General Platform FAQs',\n+\t\t\torder: 1,\n+\t\t},\n+\t},\n+\t{\n+\t\tid: 'products/faq/databases/category',\n+\t\tbody: '',\n+\t\tcollection: 'faqCategory',\n+\t\tdata: {\n+\t\t\ttitle: 'Database Products',\n+\t\t\torder: 2,\n+\t\t},\n+\t},\n+\t{\n+\t\tid: 'platform/faq/security/category',\n+\t\tbody: '',\n+\t\tcollection: 'faqCategory',\n+\t\tdata: {\n+\t\t\ttitle: 'Platform Security',\n+\t\t\torder: 0, // This category should appear first due to order\n+\t\t},\n+\t},\n+\t{\n+\t\tid: 'unmatched-category-id/category', // Category with no matching FAQs by data.category\n+\t\tbody: '',\n+\t\tcollection: 'faqCategory',\n+\t\tdata: {\n+\t\t\ttitle: 'Unmatched Category Title',\n+\t\t\torder: 99,\n+\t\t},\n+\t},\n+];\ndiff --git a/apps/docs/src/components/faq/faq-service.spec.ts b/apps/docs/src/components/faq/faq-service.spec.ts\nindex 3e13bdf83e..608872c21c 100644\n--- a/apps/docs/src/components/faq/faq-service.spec.ts\n+++ b/apps/docs/src/components/faq/faq-service.spec.ts\n@@ -1,102 +1,6 @@\n import { collectionsWithFallback } from '../../util/collections-cache';\n import { getGroupedFaqItems, type Faq, type FaqCategory } from './faq-service';\n-\n-const mockFaqs: Faq[] = [\n-\t{\n-\t\tid: 'platform/faq/general/faq-1',\n-\t\tbody: 'body 1',\n-\t\tcollection: 'faq',\n-\t\tdata: {\n-\t\t\tquestion: 'FAQ 1',\n-\t\t\torder: 2,\n-\t\t\tlastUpdated: new Date('2022-01-01'),\n-\t\t\tdraft: false,\n-\t\t},\n-\t},\n-\t{\n-\t\tid: 'platform/faq/general/faq-2',\n-\t\tbody: 'body 2',\n-\t\tcollection: 'faq',\n-\t\tdata: {\n-\t\t\tquestion: 'FAQ 2',\n-\t\t\torder: 1,\n-\t\t\tlastUpdated: new Date('2022-01-01'),\n-\t\t\tdraft: false,\n-\t\t},\n-\t},\n-\t{\n-\t\tid: 'products/faq/databases/faq-3',\n-\t\tbody: 'body 3',\n-\t\tcollection: 'faq',\n-\t\tdata: {\n-\t\t\tquestion: 'FAQ 3',\n-\t\t\torder: 1,\n-\t\t\tlastUpdated: new Date('2022-01-01'),\n-\t\t\tdraft: false,\n-\t\t},\n-\t},\n-\t{\n-\t\tid: 'products/faq/databases/faq-4',\n-\t\tbody: 'body 4',\n-\t\tcollection: 'faq',\n-\t\tdata: {\n-\t\t\tquestion: 'FAQ 4',\n-\t\t\torder: 2,\n-\t\t\tlastUpdated: new Date('2022-01-01'),\n-\t\t\tdraft: false,\n-\t\t},\n-\t},\n-\t{\n-\t\tid: 'platform/faq/security/faq-5',\n-\t\tbody: 'body 5',\n-\t\tcollection: 'faq',\n-\t\tdata: {\n-\t\t\tquestion: 'FAQ 5',\n-\t\t\torder: 1,\n-\t\t\tlastUpdated: new Date('2022-01-01'),\n-\t\t\tdraft: false,\n-\t\t},\n-\t},\n-];\n-\n-const mockFaqCategories: FaqCategory[] = [\n-\t{\n-\t\tid: 'platform/faq/general/category',\n-\t\tbody: '',\n-\t\tcollection: 'faqCategory',\n-\t\tdata: {\n-\t\t\ttitle: 'General Platform FAQs',\n-\t\t\torder: 1,\n-\t\t},\n-\t},\n-\t{\n-\t\tid: 'products/faq/databases/category',\n-\t\tbody: '',\n-\t\tcollection: 'faqCategory',\n-\t\tdata: {\n-\t\t\ttitle: 'Database Products',\n-\t\t\torder: 2,\n-\t\t},\n-\t},\n-\t{\n-\t\tid: 'platform/faq/security/category',\n-\t\tbody: '',\n-\t\tcollection: 'faqCategory',\n-\t\tdata: {\n-\t\t\ttitle: 'Platform Security',\n-\t\t\torder: 0, // This category should appear first due to order\n-\t\t},\n-\t},\n-\t{\n-\t\tid: 'unmatched-category-id/category', // Category with no matching FAQs by data.category\n-\t\tbody: '',\n-\t\tcollection: 'faqCategory',\n-\t\tdata: {\n-\t\t\ttitle: 'Unmatched Category Title',\n-\t\t\torder: 99,\n-\t\t},\n-\t},\n-];\n+import { mockFaqCategories, mockFaqs } from './faq-service.mock';\n \n // Mock \\n\\n... (Diff gekürzt aufgrund der Größe) ...\\n\\nBitte analysiere:\\n1. Code-Qualität und Best Practices\\n2. Potentielle Bugs oder Sicherheitslücken\\n3. Performance-Aspekte\\n4. Wartbarkeit und Lesbarkeit\\n5. Test-Abdeckung\\n\\nAntworte auf Deutsch und strukturiere das Review übersichtlich.\n"
        }
    ],
    "max_tokens": 2000,
    "temperature": 0.3
}
